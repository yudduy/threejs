"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_components_RoseUniverse_tsx",{

/***/ "(app-pages-browser)/./components/RoseUniverse.tsx":
/*!*************************************!*\
  !*** ./components/RoseUniverse.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"(app-pages-browser)/./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"(app-pages-browser)/./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* harmony import */ var _typing_animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typing-animation */ \"(app-pages-browser)/./components/typing-animation.tsx\");\n/* harmony import */ var _textGeometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./textGeometry */ \"(app-pages-browser)/./components/textGeometry.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\ngsap__WEBPACK_IMPORTED_MODULE_4__.gsap.registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__.ScrollTrigger);\n// Add these shape generation functions at the top of the component:\nconst generateShapes = {\n    galaxy: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        for(let i = 0; i < particleCount; i++){\n            const radius = randomValues[i * 3] * 400 + randomValues[i * 3 + 1] * 200;\n            const theta = randomValues[i * 3 + 2] * Math.PI * 2;\n            const phi = randomValues[i * 3 + 3] * Math.PI * 2;\n            const spiral = randomValues[i * 3 + 4] * 125;\n            positions[i * 3] = radius * Math.sin(phi) * Math.cos(theta) + spiral * Math.cos(theta) // Centered\n            ;\n            positions[i * 3 + 1] = radius * Math.sin(phi) * Math.sin(theta) + spiral * Math.sin(theta) // Centered\n            ;\n            positions[i * 3 + 2] = radius * Math.cos(phi) * randomValues[i * 3 + 5];\n        }\n        return positions;\n    },\n    donut: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const radius = 200;\n        const tubeRadius = 100;\n        for(let i = 0; i < particleCount; i++){\n            const theta = randomValues[i * 3] * Math.PI * 2;\n            const phi = randomValues[i * 3 + 1] * Math.PI * 2;\n            const scatter = randomValues[i * 3 + 2] * 100 - 50;\n            const x = (radius + tubeRadius * Math.cos(phi)) * Math.cos(theta) + scatter // Centered\n            ;\n            const y = (radius + tubeRadius * Math.cos(phi)) * Math.sin(theta) + scatter // Centered\n            ;\n            const z = tubeRadius * Math.sin(phi) + scatter;\n            positions[i * 3] = x;\n            positions[i * 3 + 1] = y;\n            positions[i * 3 + 2] = z;\n        }\n        return positions;\n    },\n    dna: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const radius = 200;\n        const height = 400;\n        for(let i = 0; i < particleCount; i++){\n            const t = i / particleCount * height;\n            const theta = t / 40 * Math.PI * 2;\n            const scatter = randomValues[i * 3] * 100 - 50;\n            positions[i * 3] = radius * Math.cos(theta) + scatter // Centered\n            ;\n            positions[i * 3 + 1] = t - height / 2 + scatter // Centered\n            ;\n            positions[i * 3 + 2] = radius * Math.sin(theta) + scatter;\n        }\n        return positions;\n    },\n    s: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const radius = 300;\n        const halfCount = Math.floor(particleCount / 2);\n        for(let i = 0; i < particleCount; i++){\n            let t = i / particleCount;\n            let x = 0, y = 0, z = 0;\n            if (i < halfCount) {\n                t = i / halfCount * Math.PI * 1.5; // Adjusted scale for half the particle count\n                x = Math.cos(t) * radius * 0.4;\n                y = Math.sin(t) * radius * 0.4 + radius * 0.4; // Slightly shifted up\n            } else {\n                t = (i - halfCount) / halfCount * Math.PI * 1.5 + Math.PI;\n                x = Math.cos(t) * radius * 0.4;\n                y = Math.sin(t) * radius * 0.4 - radius * 0.4; // Slightly shifted down\n            }\n            z = (randomValues[i * 3] - 0.5) * 50;\n            positions[i * 3] = x + (randomValues[i * 3 + 1] - 0.5) * 25;\n            positions[i * 3 + 1] = y + (randomValues[i * 3 + 2] - 0.5) * 25;\n            positions[i * 3 + 2] = z;\n        }\n        return positions;\n    },\n    bitcoin: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const radius = 200;\n        const halfParticleCount = Math.floor(particleCount / 2);\n        for(let i = 0; i < particleCount; i++){\n            let t = i / halfParticleCount * Math.PI; // We don't need the full circle here\n            const scatterX = (randomValues[i * 3] - 0.5) * 30;\n            const scatterY = (randomValues[i * 3 + 1] - 0.5) * 30;\n            const x = radius * Math.cos(t) + scatterX;\n            const y = radius * Math.sin(t) + scatterY;\n            const z = (randomValues[i * 3 + 2] - 0.5) * 20;\n            if (i < halfParticleCount) {\n                // Upper half circle + vertical lines\n                positions[i * 3] = x;\n                positions[i * 3 + 1] = y + radius / 2; // Center the upper circle\n            } else {\n                // Lower half circle\n                const index = i - halfParticleCount;\n                t = index / halfParticleCount * Math.PI;\n                const scatterXLower = (randomValues[i * 3] - 0.5) * 30;\n                const scatterYLower = (randomValues[i * 3 + 1] - 0.5) * 30;\n                const xLower = radius * Math.cos(t) + scatterXLower;\n                const yLower = radius * Math.sin(t) + scatterYLower;\n                positions[i * 3] = xLower;\n                positions[i * 3 + 1] = yLower - radius / 2; // Center the lower circle\n            }\n            positions[i * 3 + 2] = z;\n            // Add vertical lines through the middle of the B\n            if (i % Math.floor(particleCount / 10) === 0) {\n                positions[i * 3] = scatterX; // Keep X very close to zero for the vertical lines\n                positions[i * 3 + 1] = (randomValues[i * 3 + 1] - 0.5) * radius; // Extend vertically across the symbol\n                positions[i * 3 + 2] = z;\n            }\n        }\n        return positions;\n    },\n    robot: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const size = 200;\n        const headHeight = size / 3;\n        const bodyHeight = size / 2;\n        const limbLength = size / 3;\n        for(let i = 0; i < particleCount; i++){\n            const scatter = randomValues[i * 3] * 20 - 10;\n            // Head\n            if (i < particleCount * 0.2) {\n                positions[i * 3] = (randomValues[i * 3] - 0.5) * size / 2 + scatter;\n                positions[i * 3 + 1] = size / 2 + headHeight / 2 + scatter;\n                positions[i * 3 + 2] = (randomValues[i * 3 + 2] - 0.5) * size / 10;\n            } else if (i < particleCount * 0.6) {\n                positions[i * 3] = (randomValues[i * 3] - 0.5) * size / 3 + scatter;\n                positions[i * 3 + 1] = (randomValues[i * 3 + 1] - 0.5) * bodyHeight + scatter;\n                positions[i * 3 + 2] = (randomValues[i * 3 + 2] - 0.5) * size / 15;\n            } else {\n                const limb = Math.floor(randomValues[i * 3] * 4);\n                if (limb < 2) {\n                    // Arms\n                    positions[i * 3] = (limb % 2 * 2 - 1) * size / 2 + scatter;\n                    positions[i * 3 + 1] = (randomValues[i * 3 + 1] - 0.5) * size / 3 + scatter;\n                } else {\n                    // Legs\n                    positions[i * 3] = (limb % 2 * 2 - 1) * size / 4 + scatter;\n                    positions[i * 3 + 1] = (randomValues[i * 3 + 1] * 2 - 1) * size / 2 - bodyHeight / 2 + scatter;\n                }\n                positions[i * 3 + 2] = (randomValues[i * 3 + 2] - 0.5) * size / 15;\n            }\n        }\n        return positions;\n    },\n    tree: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const trunkHeight = 100;\n        const trunkWidth = 20;\n        const crownRadius = 80;\n        for(let i = 0; i < particleCount; i++){\n            const scatter = randomValues[i * 3] * 20 - 10;\n            const t = i / particleCount * Math.PI * 2;\n            // Trunk\n            if (i < particleCount * 0.2) {\n                positions[i * 3] = scatter; // X position\n                positions[i * 3 + 1] = i / particleCount * trunkHeight; // Y position\n                positions[i * 3 + 2] = scatter; // Z position\n            } else {\n                const leafHeight = trunkHeight + Math.random() * crownRadius;\n                const angle = Math.random() * Math.PI * 2;\n                const radius = Math.random() * crownRadius;\n                positions[i * 3] = radius * Math.cos(angle) + scatter; // X position\n                positions[i * 3 + 1] = leafHeight; // Y position\n                positions[i * 3 + 2] = radius * Math.sin(angle) + scatter; // Z position\n            }\n        }\n        return positions;\n    },\n    smiley: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const radius = 200;\n        for(let i = 0; i < particleCount; i++){\n            const scatter = randomValues[i * 3] * 20 - 10;\n            const t = i / particleCount * Math.PI * 2;\n            // Face circle\n            if (i < particleCount * 0.6) {\n                positions[i * 3] = radius * Math.cos(t) + scatter;\n                positions[i * 3 + 1] = radius * Math.sin(t) + scatter;\n                positions[i * 3 + 2] = randomValues[i * 3 + 2] * 20 - 10;\n            } else if (i < particleCount * 0.8) {\n                const eye = i % 2;\n                positions[i * 3] = (eye * 2 - 1) * radius / 3 + scatter;\n                positions[i * 3 + 1] = radius / 3 + scatter;\n                positions[i * 3 + 2] = randomValues[i * 3 + 2] * 20 - 10;\n            } else {\n                const smile = Math.PI * (0.1 + 0.8 * (i / particleCount));\n                positions[i * 3] = radius / 2 * Math.cos(smile) + scatter;\n                positions[i * 3 + 1] = radius / 2 * Math.sin(smile) - radius / 3 + scatter;\n                positions[i * 3 + 2] = randomValues[i * 3 + 2] * 20 - 10;\n            }\n        }\n        return positions;\n    },\n    infinity: (particleCount, randomValues)=>{\n        const positions = new Float32Array(particleCount * 3);\n        const size = 400;\n        for(let i = 0; i < particleCount; i++){\n            const t = i / particleCount * Math.PI * 2;\n            const scatter = randomValues[i * 3] * 20 - 10;\n            // Lemniscate formula (infinity symbol)\n            const a = size / 2;\n            const denom = 1 + Math.sin(t) * Math.sin(t);\n            positions[i * 3] = a * Math.cos(t) / denom + scatter;\n            positions[i * 3 + 1] = a * Math.sin(t) * Math.cos(t) / denom + scatter;\n            positions[i * 3 + 2] = randomValues[i * 3 + 2] * 20 - 10;\n        }\n        return positions;\n    }\n};\nfunction RoseUniverse(param) {\n    let { onAnimationComplete } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const mousePosition = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        x: 0,\n        y: 0\n    });\n    const sceneRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const geometryRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentSection, setCurrentSection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showWelcomeText, setShowWelcomeText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentText, setCurrentText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        opacity: 1\n    });\n    const textMode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(true);\n    const lastTextChange = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const currentShape = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)('galaxy');\n    const shapes = [\n        'galaxy',\n        'donut',\n        'dna',\n        'bitcoin',\n        'robot',\n        'smiley',\n        's',\n        'infinity',\n        'tree'\n    ];\n    const shapeIndex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const [showContactForm, setShowContactForm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        email: '',\n        message: ''\n    });\n    const [submitStatus, setSubmitStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        type: null,\n        message: ''\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"RoseUniverse.useEffect\": ()=>{\n            if (!containerRef.current) return;\n            const scene = new three__WEBPACK_IMPORTED_MODULE_6__.Scene();\n            sceneRef.current = scene;\n            const camera = new three__WEBPACK_IMPORTED_MODULE_6__.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 2000);\n            camera.position.z = 400;\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_7__.WebGLRenderer({\n                alpha: true,\n                antialias: true,\n                powerPreference: \"high-performance\"\n            });\n            rendererRef.current = renderer;\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(window.innerWidth, window.innerHeight);\n            containerRef.current.appendChild(renderer.domElement);\n            const particleCount = 100000;\n            const positions = new Float32Array(particleCount * 3);\n            const originalPositions = new Float32Array(particleCount * 3);\n            const textPositions = new Float32Array(particleCount * 3);\n            const colors = new Float32Array(particleCount * 3);\n            // Generate random values once to avoid hydration issues\n            const randomValues = new Float32Array(particleCount * 13).map({\n                \"RoseUniverse.useEffect.randomValues\": ()=>Math.random()\n            }[\"RoseUniverse.useEffect.randomValues\"]); // Fixed size to 13\n            // Generate text positions with 50% larger size\n            const textGeometry = (0,_textGeometry__WEBPACK_IMPORTED_MODULE_3__.createTextGeometry)('AXESS', particleCount);\n            for(let i = 0; i < particleCount; i++){\n                textPositions[i * 3] = textGeometry[i * 3] * 9;\n                textPositions[i * 3 + 1] = textGeometry[i * 3 + 1] * 9;\n                textPositions[i * 3 + 2] = textGeometry[i * 3 + 2] * 9;\n            }\n            // Create a more spread out initial formation\n            for(let i = 0; i < particleCount; i++){\n                const radius = randomValues[i * 3] * 400 + randomValues[i * 3 + 1] * 200 // Adjusted radius range\n                ;\n                const theta = randomValues[i * 3 + 2] * Math.PI * 2;\n                const phi = randomValues[i * 3 + 3] * Math.PI * 2;\n                const spiral = randomValues[i * 3 + 4] * 100 // Adjusted spiral effect\n                ;\n                positions[i * 3] = radius * Math.sin(phi) * Math.cos(theta) + spiral * Math.cos(theta);\n                positions[i * 3 + 1] = radius * Math.sin(phi) * Math.sin(theta) + spiral * Math.sin(theta);\n                positions[i * 3 + 2] = radius * Math.cos(phi) * randomValues[i * 3 + 5] // Adjusted Z spread\n                ;\n                // Brighter colors\n                if (randomValues[i * 3 + 6] < 0.4) {\n                    // Pure white\n                    colors[i * 3] = 1.0;\n                    colors[i * 3 + 1] = 1.0;\n                    colors[i * 3 + 2] = 1.0;\n                } else if (randomValues[i * 3 + 7] < 0.7) {\n                    // Bright blue\n                    colors[i * 3] = 0.7;\n                    colors[i * 3 + 1] = 0.9;\n                    colors[i * 3 + 2] = 1.0;\n                } else {\n                    // Light purple\n                    colors[i * 3] = 0.8;\n                    colors[i * 3 + 1] = 0.6;\n                    colors[i * 3 + 2] = 1.0;\n                }\n            }\n            const geometry = new three__WEBPACK_IMPORTED_MODULE_6__.BufferGeometry();\n            geometryRef.current = geometry;\n            geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_6__.BufferAttribute(positions, 3));\n            geometry.setAttribute('color', new three__WEBPACK_IMPORTED_MODULE_6__.BufferAttribute(colors, 3));\n            // Brighter particles\n            const material = new three__WEBPACK_IMPORTED_MODULE_6__.PointsMaterial({\n                size: 0.5,\n                vertexColors: true,\n                transparent: true,\n                opacity: 1.0,\n                sizeAttenuation: true,\n                blending: three__WEBPACK_IMPORTED_MODULE_6__.AdditiveBlending,\n                depthWrite: false\n            });\n            // Create particle system\n            const particles = new three__WEBPACK_IMPORTED_MODULE_6__.Points(geometry, material);\n            scene.add(particles);\n            const textSpread = 20;\n            for(let i = 0; i < particleCount; i++){\n                const letterIndex = Math.floor(i / particleCount * 5);\n                const letterPosition = (letterIndex - 2) * textSpread;\n                const angle = i / particleCount * Math.PI * 2;\n                const letterRadius = 12 + randomValues[i * 3 + 8] * 6 // Increased radius\n                ;\n                const heightVariation = randomValues[i * 3 + 9] * 9 // Increased height variation\n                ;\n                originalPositions[i * 3] = letterPosition + Math.cos(angle) * letterRadius;\n                originalPositions[i * 3 + 1] = Math.sin(angle) * letterRadius + heightVariation;\n                originalPositions[i * 3 + 2] = Math.cos(angle * 2) * 6 // Increased depth\n                ;\n            }\n            const galaxyPositions = generateShapes.galaxy(particleCount, randomValues);\n            geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_6__.BufferAttribute(galaxyPositions, 3));\n            const tl = gsap__WEBPACK_IMPORTED_MODULE_4__.gsap.timeline({\n                delay: 2,\n                onComplete: {\n                    \"RoseUniverse.useEffect.tl\": ()=>{\n                        setTimeout({\n                            \"RoseUniverse.useEffect.tl\": ()=>setShowWelcomeText(true)\n                        }[\"RoseUniverse.useEffect.tl\"], 1000);\n                    }\n                }[\"RoseUniverse.useEffect.tl\"]\n            });\n            // Animate to text formation\n            tl.to(galaxyPositions, {\n                duration: 3,\n                ease: 'power2.inOut',\n                onUpdate: {\n                    \"RoseUniverse.useEffect\": ()=>{\n                        for(let i = 0; i < particleCount; i++){\n                            const ix = i * 3;\n                            galaxyPositions[ix] += (textPositions[ix] - galaxyPositions[ix]) * 0.1;\n                            galaxyPositions[ix + 1] += (textPositions[ix + 1] - galaxyPositions[ix + 1]) * 0.1;\n                            galaxyPositions[ix + 2] += (textPositions[ix + 2] - galaxyPositions[ix + 2]) * 0.1;\n                        }\n                        geometry.attributes.position.needsUpdate = true;\n                    }\n                }[\"RoseUniverse.useEffect\"]\n            });\n            // Animate to burst and spread widely\n            tl.to(galaxyPositions, {\n                duration: 2,\n                ease: 'power2.inOut',\n                onUpdate: {\n                    \"RoseUniverse.useEffect\": ()=>{\n                        for(let i = 0; i < particleCount; i++){\n                            const ix = i * 3;\n                            const burstFactor = i < particleCount * 0.7 ? 1.5 : 0.1; // 60% of particles burst towards the camera\n                            galaxyPositions[ix] += (randomValues[i * 3 + 10] * 800 - 400) * burstFactor; // Adjusted burst range\n                            galaxyPositions[ix + 1] += (randomValues[i * 3 + 11] * 800 - 400) * burstFactor; // Adjusted burst range\n                            galaxyPositions[ix + 2] += (randomValues[i * 3 + 12] * 800 - 400) * burstFactor; // Adjusted burst range\n                        }\n                        geometry.attributes.position.needsUpdate = true;\n                    }\n                }[\"RoseUniverse.useEffect\"],\n                onComplete: {\n                    \"RoseUniverse.useEffect\": ()=>{\n                        // After burst, transition to S shape\n                        const sPositions = generateShapes.s(particleCount, randomValues);\n                        gsap__WEBPACK_IMPORTED_MODULE_4__.gsap.to(galaxyPositions, {\n                            duration: 2,\n                            ease: 'power2.inOut',\n                            onUpdate: {\n                                \"RoseUniverse.useEffect\": ()=>{\n                                    for(let i = 0; i < particleCount; i++){\n                                        const ix = i * 3;\n                                        galaxyPositions[ix] += (sPositions[ix] - galaxyPositions[ix]) * 0.1;\n                                        galaxyPositions[ix + 1] += (sPositions[ix + 1] - galaxyPositions[ix + 1]) * 0.1;\n                                        galaxyPositions[ix + 2] += (sPositions[ix + 2] - galaxyPositions[ix + 2]) * 0.1;\n                                    }\n                                    geometry.attributes.position.needsUpdate = true;\n                                }\n                            }[\"RoseUniverse.useEffect\"],\n                            onComplete: {\n                                \"RoseUniverse.useEffect\": ()=>{\n                                    // Start shape rotation interval\n                                    setInterval({\n                                        \"RoseUniverse.useEffect\": ()=>{\n                                            shapeIndex.current = (shapeIndex.current + 1) % shapes.length;\n                                            const nextShape = shapes[shapeIndex.current];\n                                            const nextPositions = generateShapes[nextShape](particleCount, randomValues);\n                                            gsap__WEBPACK_IMPORTED_MODULE_4__.gsap.to(galaxyPositions, {\n                                                duration: 2,\n                                                ease: 'power2.inOut',\n                                                onUpdate: {\n                                                    \"RoseUniverse.useEffect\": ()=>{\n                                                        for(let i = 0; i < particleCount; i++){\n                                                            const ix = i * 3;\n                                                            galaxyPositions[ix] += (nextPositions[ix] - galaxyPositions[ix]) * 0.1;\n                                                            galaxyPositions[ix + 1] += (nextPositions[ix + 1] - galaxyPositions[ix + 1]) * 0.1;\n                                                            galaxyPositions[ix + 2] += (nextPositions[ix + 2] - galaxyPositions[ix + 2]) * 0.1;\n                                                        }\n                                                        geometry.attributes.position.needsUpdate = true;\n                                                    }\n                                                }[\"RoseUniverse.useEffect\"]\n                                            });\n                                        }\n                                    }[\"RoseUniverse.useEffect\"], 5000);\n                                }\n                            }[\"RoseUniverse.useEffect\"]\n                        });\n                    }\n                }[\"RoseUniverse.useEffect\"]\n            });\n            // Animation loop with mouse interaction\n            const animate = {\n                \"RoseUniverse.useEffect.animate\": ()=>{\n                    requestAnimationFrame(animate);\n                    const positions = geometry.attributes.position.array;\n                    // Mouse interaction with magnetic effect\n                    for(let i = 0; i < particleCount; i++){\n                        const ix = i * 3;\n                        const dx = positions[ix] - mousePosition.current.x * 100;\n                        const dy = positions[ix + 1] - mousePosition.current.y * 100;\n                        const dist = Math.sqrt(dx * dx + dy * dy);\n                        const repelStrength = Math.max(0, 1 - dist / 100) * 4 // Reduced distance effect to 10%\n                        ;\n                        positions[ix] += dx * repelStrength * 0.01;\n                        positions[ix + 1] += dy * repelStrength * 0.01;\n                        positions[ix] += (originalPositions[ix] - positions[ix]) * 0.005;\n                        positions[ix + 1] += (originalPositions[ix + 1] - positions[ix + 1]) * 0.005;\n                        positions[ix + 2] += (originalPositions[ix + 2] - positions[ix + 2]) * 0.005;\n                    }\n                    geometry.attributes.position.needsUpdate = true;\n                    renderer.render(scene, camera);\n                }\n            }[\"RoseUniverse.useEffect.animate\"];\n            const handleMouseMove = {\n                \"RoseUniverse.useEffect.handleMouseMove\": (event)=>{\n                    mousePosition.current = {\n                        x: event.clientX / window.innerWidth * 2 - 1,\n                        y: -(event.clientY / window.innerHeight) * 2 + 1\n                    };\n                }\n            }[\"RoseUniverse.useEffect.handleMouseMove\"];\n            window.addEventListener('mousemove', handleMouseMove);\n            animate();\n            // Cleanup\n            return ({\n                \"RoseUniverse.useEffect\": ()=>{\n                    window.removeEventListener('mousemove', handleMouseMove);\n                    renderer.dispose();\n                    geometry.dispose();\n                    material.dispose();\n                    sceneRef.current = null;\n                    rendererRef.current = null;\n                    geometryRef.current = null;\n                }\n            })[\"RoseUniverse.useEffect\"];\n        }\n    }[\"RoseUniverse.useEffect\"], [\n        onAnimationComplete\n    ]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setLoading(true);\n        setSubmitStatus({\n            type: null,\n            message: ''\n        });\n        try {\n            const response = await fetch(\"\".concat(process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5001', \"/api/contact\"), {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData),\n                credentials: 'include'\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed to submit form');\n            }\n            const data = await response.json();\n            setSubmitStatus({\n                type: 'success',\n                message: 'Thank you for your message! We\\'ll be in touch soon.'\n            });\n            setFormData({\n                email: '',\n                message: ''\n            }) // Reset form\n            ;\n            setTimeout(()=>setShowContactForm(false), 3000) // Hide form after 3 seconds\n            ;\n        } catch (error) {\n            console.error('Contact form error:', error);\n            setSubmitStatus({\n                type: 'error',\n                message: 'Failed to send message. Please try again later.'\n            });\n        } finally{\n            setLoading(false); // Ensure loading state is reset\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: \"fixed inset-0 z-0 bg-black\"\n            }, void 0, false, {\n                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                lineNumber: 571,\n                columnNumber: 7\n            }, this),\n            showWelcomeText && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 flex flex-col items-center justify-center z-10\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_typing_animation__WEBPACK_IMPORTED_MODULE_2__.TypingAnimation, {\n                            text: \"Welcome to Axess Capital\"\n                        }, void 0, false, {\n                            fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                            lineNumber: 575,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.div, {\n                            className: \"flex flex-col items-center gap-8\",\n                            initial: {\n                                opacity: 0,\n                                y: 20\n                            },\n                            animate: {\n                                opacity: 1,\n                                y: 0\n                            },\n                            transition: {\n                                delay: 1\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"mt-4 text-lg font-semibold text-gray-400\",\n                                    children: \"Stanford's exclusive venture capital fund. Coming Soon.\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                    lineNumber: 582,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-center\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.div, {\n                                        className: \"mt-4 text-lg font-semibold text-white cursor-pointer\" // Added cursor-pointer class\n                                        ,\n                                        whileHover: {\n                                            scale: 1.1,\n                                            textShadow: \"0px 0px 8px rgba(255, 255, 255, 0.8)\",\n                                            boxShadow: \"0px 0px 20px rgba(255, 255, 255, 0.8)\"\n                                        },\n                                        onClick: ()=>setShowContactForm(true),\n                                        children: \"Curious? Contact Us!\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                        lineNumber: 586,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                    lineNumber: 585,\n                                    columnNumber: 15\n                                }, this),\n                                showContactForm && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.div, {\n                                    initial: {\n                                        opacity: 0,\n                                        y: 20\n                                    },\n                                    animate: {\n                                        opacity: 1,\n                                        y: 0\n                                    },\n                                    transition: {\n                                        delay: .1\n                                    },\n                                    className: \"bg-white/10 backdrop-blur-md p-6 rounded-lg w-80 border border-white/20\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                        onSubmit: handleSubmit,\n                                        className: \"space-y-3\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"email\",\n                                                placeholder: \"Your email\",\n                                                value: formData.email,\n                                                onChange: (e)=>setFormData((prev)=>({\n                                                            ...prev,\n                                                            email: e.target.value\n                                                        })),\n                                                required: true,\n                                                className: \"w-full bg-white/5 border border-white/10 rounded-lg px-3 py-2 text-sm text-white placeholder:text-white/40 focus:outline-none focus:border-white/30\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                                lineNumber: 603,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                                                placeholder: \"Your message\",\n                                                value: formData.message,\n                                                onChange: (e)=>setFormData((prev)=>({\n                                                            ...prev,\n                                                            message: e.target.value\n                                                        })),\n                                                required: true,\n                                                rows: 2,\n                                                className: \"w-full bg-white/5 border border-white/10 rounded-lg px-3 py-2 text-sm text-white placeholder:text-white/40 focus:outline-none focus:border-white/30\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                                lineNumber: 611,\n                                                columnNumber: 21\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                type: \"submit\",\n                                                className: \"w-full bg-white/10 hover:bg-white/20 text-white py-2 rounded-lg text-sm transition-all duration-300\",\n                                                children: \"Connect with us\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                                lineNumber: 619,\n                                                columnNumber: 21\n                                            }, this),\n                                            submitStatus.type && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_8__.motion.p, {\n                                                initial: {\n                                                    opacity: 0\n                                                },\n                                                animate: {\n                                                    opacity: 1\n                                                },\n                                                className: \"text-sm \".concat(submitStatus.type === 'success' ? 'text-green-400' : 'text-red-400'),\n                                                children: submitStatus.message\n                                            }, void 0, false, {\n                                                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                                lineNumber: 626,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                        lineNumber: 602,\n                                        columnNumber: 19\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                                    lineNumber: 596,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                            lineNumber: 576,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                    lineNumber: 574,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/duy/Documents/external_project/axess-beta/frontend/components/RoseUniverse.tsx\",\n                lineNumber: 573,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(RoseUniverse, \"3tz0Qb5vuMlWbB7MvZJ3kxbjduw=\");\n_c = RoseUniverse;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RoseUniverse);\nvar _c;\n$RefreshReg$(_c, \"RoseUniverse\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/RoseUniverse.tsx\n"));

/***/ })

});